#!/bin/bash
#note this soft ware is licensed under the gpl3+
LC_ALL=C
LANG=C
killerr=""
exec {sleep_fd}<> <(:)
profail(){
#error handeler
    case "$1" in
        pgf)
    echo "Error: process not found." >/dev/stderr
    exit 1
        ;;
        stv)
        echo "Error: invaled sleep time." >/dev/stderr
        exit 1
        ;;
        ter)
        echo "Slowed process exited."
        exfl=1
        exit 0
        ;;
        roo)
        echo 'Operation not permitted'
        exfl=1
        exit 1
        ;;
        arg)
        echo "invaled argument entered." >/dev/stderr
        exit 1
        ;;
        *)
        echo "Error $1" >/dev/stderr
        exit 1
        ;;
    esac
}
killerror(){
case "$killerr" in
    *Operation\ not\ permitted*)
    profail roo
    ;;
    *No\ such\ process*)
    profail ter
    ;;
esac
exit

}



prosctl(){
if [ "$1" = "1" ]
then
killerr="$(kill -s STOP "$pid" 2>/dev/stdout)"
else
killerr="$(kill -s CONT "$pid" 2>/dev/stdout)"
fi
[ "$killerr" = "" ] || killerror
}

sleep(){
#shellcheck disable=SC2162
read -t "$1" -u $sleep_fd
}
proghelp(){
echo 'Usage: holdup [options] [PID] <slow factor> 
  or:  holdup [options] [process name] <slow factor>
  or:  holdup [options] [process name fragment] <slow factor>
Slows down programs by stoping and starting it rapitly.

      --help        display this help and exit
      -h            same as --help
      -t=<custom time step interival>
'
exit
}

getpid(){


pgrepin(){
    pgrep -n -i -U "$UID" "$1" || profail pgf 
}

pidstr="$1"
case $pidstr in
    ''|*[!0-9]*) pid="$(pgrepin "$pidstr")" ;;
    *) 
    if [ -d "/proc/$pidstr" ]
    then
    pid="$1"
    else
    pid="$(pgrepin "$pidstr")"
    fi
    ;;
esac
[ "$pid" = "" ] && exit 1
}


slowsleep(){
local i
local k
i=1
k="$(($1+${2:-1}))"

while true
do
    
    if [ "$i" -gt "$k" ]
    then
        i=1
    fi
    
    
    if [ "$i" -gt "$1" ] 
    then
        prosctl 0 
    else
        prosctl 1
    fi
    i="$((i+1))"
    sleep "$sleeptime"
done
}
simpleslowsleep(){
local i
local k
i=0
k=0
while true
do
    i="$((i+1))"
    if [ "$i" = "$1" ]
    then
        prosctl 0
        i=0
    else
        prosctl 1
    fi
    sleep "$sleeptime"
done
}


sleeptime=0.01 # set default sleep time
stv(){
local tmp
tmp="$(printf '%s\n' "${1/-t=}")" #strip -t=
case "$tmp" in
    ''|*[!0-9\.]*)
    profail stv
    ;;
    *)
    sleeptime="$tmp"
    ;;
esac
}





for i in "$@"
do
case "$i" in
    -h)
    proghelp
    ;;
    --help)
    proghelp
    ;;
    -t=*)
    stv "$i" #valadate if input given is a number
    ;;
    *)
    comstack+=("$i")
    ;;
esac

done


getpid "${comstack[0]}"

if [ "${#comstack[@]}" -lt 2 ] || [ "${#comstack[@]}" -gt 3 ] 
then
profail arg
fi


trap '[ "$exfl" = "1" ] || prosctl 0 ;exit 0' EXIT

if [ "${comstack[2]}" = "" ]
then
simpleslowsleep "${comstack[1]}"
else
slowsleep "${comstack[1]}" "${comstack[2]}"
fi


















